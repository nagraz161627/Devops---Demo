name: CICD Demo
on:
  workflow_dispatch:
jobs:
  CI-CD:
    runs-on: ubuntu-latest
    permissions: 
      packages: write
      security-events: write
    steps:
        - name: Minikube
          run: |
            minikube start
            minikube status
            
        - name: Checkout Code
          uses: actions/checkout@v3

        - name: Login to GitHub Container Registry
          uses: docker/login-action@v2
          with:
            registry: ghcr.io
            username: ${{github.actor}}
            password: ${{ secrets.GITHUB_TOKEN}}
            
        - name: Build and Push Container Image to GitHub Container Registry
          run:  |
            docker build -t ghcr.io/${{github.actor}}/webapp:${{github.run_number}} .
            docker push ghcr.io/${{github.actor}}/webapp:${{github.run_number}}
            docker image ls

        - name: Trivy Image Scan
          run:  |
            echo "Trivy Install"
            sudo apt-get install wget apt-transport-https gnupg lsb-release
            wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
            echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
            sudo apt-get update
            sudo apt-get install trivy
            sleep 10
            trivy image --format sarif -o trivy-results.sarif  ghcr.io/${{github.actor}}/webapp:${{github.run_number}}
            sleep 10
        - name: Upload Trivy scan results to GitHub Security tab
          uses: github/codeql-action/upload-sarif@v3
          with:
            sarif_file: 'trivy-results.sarif'
            
        - name: Kubernetes Deployment
          run: |
            sleep 10
            sudo apt-get remove trivy
            sed -i 's/tag/${{github.run_number}}/' ./k8/test.yml
            kubectl apply -f ./k8/test.yml
            sleep 45
            kubectl get deployment webapp-deployment

        - name: Demo Test
          run: |
            sleep 10
            kubectl describe deployment webapp-deployment
            kubectl get pods
            echo " / Endpoint"
            curl -s $(minikube service webapp-service --url)/
            echo " /name Endpoint"
            curl -s $(minikube service webapp-service --url)/name
            
        - name: Minikube Cleanup
          run:  |
            minikube stop
            minikube delete
             
            
            
            
        
